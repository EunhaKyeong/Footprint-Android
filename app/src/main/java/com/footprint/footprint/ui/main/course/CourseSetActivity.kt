package com.footprint.footprint.ui.main.course

import android.content.Intent
import android.graphics.Color
import android.os.Bundle
import android.view.View
import androidx.annotation.UiThread
import com.footprint.footprint.R
import com.footprint.footprint.databinding.ActivityCourseSetBinding
import com.footprint.footprint.ui.BaseActivity
import com.footprint.footprint.ui.dialog.ActionDialogFragment
import com.footprint.footprint.ui.main.course.model.CourseSetModel
import com.footprint.footprint.utils.*
import com.jaygoo.widget.OnRangeChangedListener
import com.naver.maps.geometry.LatLng
import com.naver.maps.geometry.LatLngBounds
import com.naver.maps.map.*
import com.naver.maps.map.overlay.*

class CourseSetActivity : BaseActivity<ActivityCourseSetBinding>(ActivityCourseSetBinding::inflate),
    OnMapReadyCallback {
    private val multipartPaths: MutableList<MultipartPathOverlay> = mutableListOf()
    private val courseSetModels: MutableList<CourseSetModel> = mutableListOf()

    private var selectingPathIndex: Int = 0

    private lateinit var pathCoords: MutableList<MutableList<LatLng>>
    private lateinit var startMarker: Marker
    private lateinit var endMarker: Marker
    private lateinit var map: NaverMap
    private lateinit var actionFrag: ActionDialogFragment
    private lateinit var clickedCourseIndex: MutableList<Int>

    override fun initAfterBinding() {
        pathCoords = mutableListOf(
            mutableListOf(
                LatLng(37.4708172, 126.702881),
                LatLng(37.4708243, 126.7029485),
                LatLng(37.4709306, 126.7031858),
                LatLng(37.4709408, 126.7031678),
                LatLng(37.4709322, 126.7031515),
                LatLng(37.4709419, 126.7031622),
                LatLng(37.4709432, 126.7031862),
                LatLng(37.4709841, 126.7032795),
                LatLng(37.4709949, 126.7033154),
                LatLng(37.4709984, 126.7033355),
                LatLng(37.4709977, 126.7033521),
                LatLng(37.4709809, 126.7033493),
                LatLng(37.4709631, 126.7033387),
                LatLng(37.4709469, 126.7033238),
                LatLng(37.4709374, 126.7033125),
                LatLng(37.4709121, 126.7032929),
                LatLng(37.4708769, 126.7032735),
                LatLng(37.4708629, 126.703266),
                LatLng(37.4708432, 126.7032624),
                LatLng(37.470826, 126.703259),
                LatLng(37.4708085, 126.7032625),
                LatLng(37.4707963, 126.7032674),
                LatLng(37.4707842, 126.7032685),
                LatLng(37.4707727, 126.7032679),
                LatLng(37.4707624, 126.7032673),
                LatLng(37.4707631, 126.7032745),
                LatLng(37.4707623, 126.7032876),
                LatLng(37.4707617, 126.7032965),
                LatLng(37.4707629, 126.70331),
                LatLng(37.4707901, 126.7033601),
                LatLng(37.470811, 126.7033961),
                LatLng(37.4708187, 126.70342),
                LatLng(37.4708245, 126.7034421),
                LatLng(37.4708273, 126.7034565),
                LatLng(37.4708333, 126.7034738),
                LatLng(37.4708402, 126.7034923),
                LatLng(37.4708437, 126.7035012),
                LatLng(37.4708491, 126.7035127),
                LatLng(37.4708596, 126.7035238),
                LatLng(37.4708709, 126.7035325),
                LatLng(37.4708804, 126.7035406),
                LatLng(37.4708897, 126.7035471),
                LatLng(37.4709005, 126.7035565),
                LatLng(37.470913, 126.7035697),
                LatLng(37.4709289, 126.7035955),
                LatLng(37.4709406, 126.7036245),
                LatLng(37.4709487, 126.7036594),
                LatLng(37.470955, 126.7037078),
                LatLng(37.4709574, 126.7037391),
                LatLng(37.4709558, 126.7037628),
                LatLng(37.470952, 126.7037835),
                LatLng(37.4709456, 126.7038073),
                LatLng(37.4709392, 126.7038236),
                LatLng(37.4709337, 126.7038361),
                LatLng(37.4709272, 126.7038507),
                LatLng(37.4709218, 126.7038645),
                LatLng(37.4709169, 126.7038806),
                LatLng(37.4709153, 126.7038953),
                LatLng(37.4709156, 126.7039114),
                LatLng(37.4709153, 126.703928),
                LatLng(37.4709145, 126.7039456),
                LatLng(37.4709151, 126.7039629),
                LatLng(37.4709188, 126.7039813),
                LatLng(37.4709187, 126.7039927),
                LatLng(37.4709159, 126.7040065),
                LatLng(37.4709091, 126.7040176),
                LatLng(37.4708998, 126.704027),
                LatLng(37.4708952, 126.7040339),
                LatLng(37.4708923, 126.7040412),
                LatLng(37.4708899, 126.7040521),
                LatLng(37.4708886, 126.7040647),
                LatLng(37.4708902, 126.7040821),
                LatLng(37.4708925, 126.7041023),
                LatLng(37.4708966, 126.7041318),
                LatLng(37.4709022, 126.7041688),
                LatLng(37.4709065, 126.7041968),
                LatLng(37.4709104, 126.7042261),
                LatLng(37.4709123, 126.7042498),
                LatLng(37.4709125, 126.7042677),
                LatLng(37.470909, 126.7042857),
                LatLng(37.4709031, 126.704303),
                LatLng(37.4708931, 126.70432),
                LatLng(37.4708856, 126.7043322),
                LatLng(37.4708766, 126.7043472),
                LatLng(37.4708693, 126.7043588),
                LatLng(37.4708607, 126.7043721),
                LatLng(37.4708538, 126.7043813),
                LatLng(37.4708521, 126.7043865),
                LatLng(37.4708518, 126.7043915),
                LatLng(37.4708565, 126.7043929),
                LatLng(37.470861, 126.7043929),
                LatLng(37.4708659, 126.7043945),
                LatLng(37.4708709, 126.7043828),
                LatLng(37.4708709, 126.7043803),
                LatLng(37.4708689, 126.7043861),
                LatLng(37.4708634, 126.704404),
                LatLng(37.4708596, 126.7044154),
                LatLng(37.4708524, 126.704444),
                LatLng(37.4708473, 126.7044865),
                LatLng(37.4708443, 126.7045194),
                LatLng(37.4708422, 126.7045402),
                LatLng(37.4708388, 126.7045624),
                LatLng(37.4708381, 126.7045853),
                LatLng(37.4708364, 126.7046076),
                LatLng(37.4708339, 126.7046297),
                LatLng(37.4708322, 126.7046497),
                LatLng(37.4708303, 126.7046825),
                LatLng(37.4708273, 126.7047147),
                LatLng(37.4708237, 126.7047392),
                LatLng(37.47082, 126.7047664),
                LatLng(37.4708207, 126.704802),
                LatLng(37.4708179, 126.7048289),
                LatLng(37.4708141, 126.7048518),
                LatLng(37.4708096, 126.7048676),
                LatLng(37.470805, 126.7048842),
                LatLng(37.4708027, 126.7048963),
                LatLng(37.4707991, 126.7049106),
                LatLng(37.4707955, 126.7049283),
                LatLng(37.4707931, 126.704939),
                LatLng(37.4707913, 126.7049519),
                LatLng(37.4707883, 126.7049659),
                LatLng(37.4707832, 126.7049812),
                LatLng(37.4707794, 126.7049909),
                LatLng(37.4707765, 126.7050002),
                LatLng(37.4707746, 126.705014),
                LatLng(37.4707743, 126.7050217),
                LatLng(37.4707766, 126.7050242),
                LatLng(37.4707785, 126.705025),
                LatLng(37.4707785, 126.7050421),
                LatLng(37.4707773, 126.7050567),
                LatLng(37.4707758, 126.7050851),
                LatLng(37.4707727, 126.7051028),
                LatLng(37.4707662, 126.7051235),
                LatLng(37.4707621, 126.7051425),
                LatLng(37.4707613, 126.7051582),
                LatLng(37.470762, 126.7051775),
                LatLng(37.4707631, 126.7051902),
                LatLng(37.4707633, 126.7052027),
                LatLng(37.4707636, 126.7052167),
                LatLng(37.4707657, 126.7052383),
                LatLng(37.4707647, 126.7052581),
                LatLng(37.4707622, 126.7052823),
                LatLng(37.4707619, 126.7052983),
                LatLng(37.4707604, 126.7053175),
                LatLng(37.4707595, 126.705335),
                LatLng(37.4707595, 126.70535),
                LatLng(37.4707548, 126.7053752),
                LatLng(37.4707537, 126.7053904),
                LatLng(37.470751, 126.7054248),
                LatLng(37.4707482, 126.7054405),
                LatLng(37.4707425, 126.7054605),
                LatLng(37.4707368, 126.7054819),
                LatLng(37.4707318, 126.7055005),
                LatLng(37.4707319, 126.705524),
                LatLng(37.4707342, 126.7055418),
                LatLng(37.4707387, 126.7055691),
                LatLng(37.4707429, 126.70558),
                LatLng(37.4707432, 126.705587),
                LatLng(37.4707399, 126.7055895),
                LatLng(37.4707355, 126.7055975),
                LatLng(37.4707294, 126.7056093),
                LatLng(37.4707241, 126.7056243),
                LatLng(37.4707186, 126.7056496),
                LatLng(37.4707121, 126.7056671),
                LatLng(37.4707044, 126.7056834),
                LatLng(37.4706959, 126.7056998),
                LatLng(37.4706882, 126.7057192),
                LatLng(37.4706788, 126.7057398),
                LatLng(37.4706703, 126.7057569),
                LatLng(37.4706622, 126.7057718),
                LatLng(37.4706571, 126.7057853),
                LatLng(37.4706569, 126.70581),
                LatLng(37.4706534, 126.7058251),
                LatLng(37.4706494, 126.7058363),
                LatLng(37.4706457, 126.7058511),
                LatLng(37.4706448, 126.7058736),
                LatLng(37.470645, 126.7058994),
                LatLng(37.4706441, 126.7059169),
                LatLng(37.4706498, 126.7059351),
                LatLng(37.4706553, 126.7059526),
                LatLng(37.4706618, 126.7059806),
                LatLng(37.4706668, 126.7059994),
                LatLng(37.4706711, 126.7060218),
                LatLng(37.4706743, 126.706042),
                LatLng(37.4706779, 126.7060648),
                LatLng(37.4706783, 126.7060829),
                LatLng(37.4706776, 126.7061008),
                LatLng(37.4706752, 126.7061187),
                LatLng(37.4706719, 126.7061448),
                LatLng(37.4706569, 126.7061625),
                LatLng(37.4706409, 126.7061837),
                LatLng(37.4706326, 126.7062035),
                LatLng(37.4706289, 126.7062206),
                LatLng(37.4706273, 126.7062344),
                LatLng(37.4706271, 126.706247),
                LatLng(37.4706189, 126.7062772),
                LatLng(37.4706115, 126.7062951),
                LatLng(37.4706058, 126.7063135),
                LatLng(37.4706023, 126.7063329),
                LatLng(37.4705978, 126.7063576),
                LatLng(37.4705926, 126.7063735),
                LatLng(37.4705922, 126.7063928),
                LatLng(37.4705946, 126.7064182),
                LatLng(37.4705965, 126.7064355),
                LatLng(37.4706, 126.7064492),
                LatLng(37.4706032, 126.7064603),
                LatLng(37.4706081, 126.7064684),
                LatLng(37.4706103, 126.7064765),
                LatLng(37.4706058, 126.7064858),
                LatLng(37.4705983, 126.7064924),
                LatLng(37.4705912, 126.7065069),
                LatLng(37.470581, 126.7065259),
                LatLng(37.4705759, 126.7065399),
                LatLng(37.4705711, 126.7065523),
                LatLng(37.4705673, 126.706582),
                LatLng(37.4705648, 126.7065995),
                LatLng(37.4705626, 126.7066098),
                LatLng(37.470563, 126.706617),
                LatLng(37.4705667, 126.706636),
                LatLng(37.4705739, 126.7066821),
                LatLng(37.4705829, 126.7066922),
                LatLng(37.4705967, 126.7067049),
                LatLng(37.4705964, 126.7067271),
                LatLng(37.4705955, 126.7067454),
                LatLng(37.470596, 126.7067646),
                LatLng(37.4705925, 126.7067965),
                LatLng(37.4705869, 126.7068221),
                LatLng(37.470579, 126.7068579),
                LatLng(37.4705751, 126.7068822),
                LatLng(37.4705731, 126.7069078),
                LatLng(37.4705715, 126.7069291),
                LatLng(37.4705698, 126.7069462),
                LatLng(37.4705676, 126.7069689),
                LatLng(37.470565, 126.7069887),
                LatLng(37.4705615, 126.7070128),
                LatLng(37.4705586, 126.7070346),
                LatLng(37.4705572, 126.7070521),
                LatLng(37.4705564, 126.7070704),
                LatLng(37.4705554, 126.7070839),
                LatLng(37.4705538, 126.7070976),
                LatLng(37.4705495, 126.7071111),
                LatLng(37.4705454, 126.7071233),
                LatLng(37.4705397, 126.7071382),
                LatLng(37.4705355, 126.7071502),
                LatLng(37.470532, 126.7071643),
                LatLng(37.4705322, 126.7071768),
                LatLng(37.4705342, 126.7071912),
                LatLng(37.4705359, 126.7072044),
                LatLng(37.4705339, 126.7072191),
                LatLng(37.4705311, 126.7072316),
                LatLng(37.4705335, 126.7072477),
                LatLng(37.4705345, 126.7072671),
                LatLng(37.4705334, 126.707281),
                LatLng(37.4705317, 126.7072948),
                LatLng(37.4705326, 126.7073082),
                LatLng(37.4705333, 126.70732),
                LatLng(37.4705334, 126.7073314),
                LatLng(37.4705334, 126.7073457),
                LatLng(37.4705336, 126.7073625),
                LatLng(37.4705359, 126.7073797),
                LatLng(37.4705363, 126.7073908),
                LatLng(37.4705352, 126.7073989),
                LatLng(37.4705332, 126.7074047),
                LatLng(37.4705328, 126.7074135),
                LatLng(37.4705343, 126.7074272),
                LatLng(37.4705355, 126.7074351),
                LatLng(37.4705365, 126.7074481),
                LatLng(37.4705378, 126.7074683),
                LatLng(37.4705402, 126.707495),
                LatLng(37.4705421, 126.7075207),
                LatLng(37.4705434, 126.7075401),
                LatLng(37.470546, 126.7075629),
                LatLng(37.4705508, 126.7075833),
                LatLng(37.4705563, 126.7076026),
                LatLng(37.4705614, 126.7076205),
                LatLng(37.4705668, 126.7076372),
                LatLng(37.470572, 126.7076523),
                LatLng(37.4705628, 126.707687),
                LatLng(37.4705567, 126.7077098),
                LatLng(37.4705541, 126.7077256),
                LatLng(37.4705532, 126.7077315),
                LatLng(37.4705503, 126.7077292),
                LatLng(37.4705447, 126.7077162),
                LatLng(37.4705349, 126.7076994),
                LatLng(37.4705254, 126.7076909),
                LatLng(37.4705148, 126.7076878),
                LatLng(37.4705036, 126.7076878),
                LatLng(37.4704921, 126.7076922),
                LatLng(37.4704804, 126.7076987),
                LatLng(37.4704674, 126.7077076),
                LatLng(37.4704527, 126.7077173),
                LatLng(37.4704368, 126.7077254),
                LatLng(37.4704213, 126.7077328),
                LatLng(37.4704028, 126.7077427),
                LatLng(37.4703882, 126.7077545),
                LatLng(37.4703717, 126.7077628)
            ), mutableListOf(
                LatLng(37.4672821, 126.708378),
                LatLng(37.4672606, 126.7083836),
                LatLng(37.4672659, 126.70841),
                LatLng(37.4672737, 126.7084296),
                LatLng(37.4672744, 126.7084502),
                LatLng(37.4672666, 126.7084554),
                LatLng(37.4672575, 126.7084548),
                LatLng(37.4672488, 126.7084487),
                LatLng(37.4672383, 126.7084422),
                LatLng(37.4672245, 126.7084501),
                LatLng(37.4672176, 126.7084622),
                LatLng(37.4672113, 126.7084665),
                LatLng(37.4672062, 126.7084688),
                LatLng(37.4672, 126.7084714),
                LatLng(37.467194, 126.7084741),
                LatLng(37.4671872, 126.7084765),
                LatLng(37.4671812, 126.70848),
                LatLng(37.467178, 126.7084841),
                LatLng(37.4671744, 126.7084913),
                LatLng(37.4671672, 126.7085049),
                LatLng(37.4671499, 126.7085172),
                LatLng(37.4671278, 126.708532),
                LatLng(37.4671082, 126.7085422),
                LatLng(37.4670834, 126.7085549),
                LatLng(37.4670408, 126.7085764),
                LatLng(37.4670108, 126.7085869),
                LatLng(37.4669935, 126.7085977),
                LatLng(37.4669793, 126.708613),
                LatLng(37.4669643, 126.7086331),
                LatLng(37.4669491, 126.7086549),
                LatLng(37.4669364, 126.7086733),
                LatLng(37.4669269, 126.708691),
                LatLng(37.4669219, 126.7087),
                LatLng(37.4669181, 126.7087041),
                LatLng(37.4669145, 126.708705),
                LatLng(37.4669111, 126.7087057),
                LatLng(37.4669066, 126.7087058),
                LatLng(37.4669001, 126.70871),
                LatLng(37.4668903, 126.7087347),
                LatLng(37.4668835, 126.7087527),
                LatLng(37.4668785, 126.7087748),
                LatLng(37.4668751, 126.7087953),
                LatLng(37.4668741, 126.7088203),
                LatLng(37.4668703, 126.7088335),
                LatLng(37.4668666, 126.708847),
                LatLng(37.4668648, 126.7088632),
                LatLng(37.4668641, 126.7088828),
                LatLng(37.4668599, 126.7089087),
                LatLng(37.466846, 126.7089302),
                LatLng(37.4668324, 126.708956),
                LatLng(37.4668261, 126.708969),
                LatLng(37.4668136, 126.7089966),
                LatLng(37.4668045, 126.7090099),
                LatLng(37.4667978, 126.7090208),
                LatLng(37.4667901, 126.7090329),
                LatLng(37.46677, 126.7090577),
                LatLng(37.4667589, 126.7090731),
                LatLng(37.4667493, 126.7090876),
                LatLng(37.4667281, 126.7091226),
                LatLng(37.4667122, 126.7091451),
                LatLng(37.4667023, 126.7091653),
                LatLng(37.4666891, 126.7091959),
                LatLng(37.4666769, 126.7092186),
                LatLng(37.4666717, 126.7092318),
                LatLng(37.4666679, 126.7092473),
                LatLng(37.4666642, 126.7092599),
                LatLng(37.466661, 126.7092745),
                LatLng(37.4666527, 126.7092955),
                LatLng(37.4666469, 126.7093064),
                LatLng(37.4666476, 126.7093153),
                LatLng(37.4666484, 126.7093281),
                LatLng(37.4666461, 126.709346),
                LatLng(37.4666434, 126.7093599),
                LatLng(37.4666403, 126.7093706),
                LatLng(37.4666358, 126.7093826),
                LatLng(37.4666225, 126.7094073),
                LatLng(37.4666128, 126.7094196),
                LatLng(37.4665971, 126.7094422),
                LatLng(37.4665928, 126.7094544),
                LatLng(37.466589, 126.7094694),
                LatLng(37.466587, 126.70948),
                LatLng(37.4665846, 126.7094912),
                LatLng(37.4665786, 126.7095122),
                LatLng(37.4665776, 126.7095409),
                LatLng(37.4665782, 126.709563),
                LatLng(37.4665708, 126.7096105),
                LatLng(37.466577, 126.7096211),
                LatLng(37.4665872, 126.709625),
                LatLng(37.4665968, 126.7096344),
                LatLng(37.4665919, 126.709651),
                LatLng(37.4665793, 126.7096573),
                LatLng(37.4665662, 126.7096614),
                LatLng(37.4665568, 126.7096653),
                LatLng(37.4665474, 126.7096671),
                LatLng(37.4665367, 126.7096686),
                LatLng(37.4665284, 126.7096764),
                LatLng(37.4665133, 126.7096945),
                LatLng(37.466506, 126.7097081),
                LatLng(37.466499, 126.7097201),
                LatLng(37.4664877, 126.7097327),
                LatLng(37.4664758, 126.7097467),
                LatLng(37.4664669, 126.7097588),
                LatLng(37.4664582, 126.7097689),
                LatLng(37.4664486, 126.7097894),
                LatLng(37.4664362, 126.7098064),
                LatLng(37.4664255, 126.7098217),
                LatLng(37.4664132, 126.7098375),
                LatLng(37.4664054, 126.7098562),
                LatLng(37.4663932, 126.7098758),
                LatLng(37.4663788, 126.7098984),
                LatLng(37.4663681, 126.7099136),
                LatLng(37.4663593, 126.7099297),
                LatLng(37.4663511, 126.709943),
                LatLng(37.46634, 126.7099573),
                LatLng(37.4663238, 126.7099815),
                LatLng(37.4663113, 126.7100018),
                LatLng(37.4663029, 126.7100153),
                LatLng(37.4662934, 126.7100352),
                LatLng(37.4662804, 126.710059),
                LatLng(37.466274, 126.7100732),
                LatLng(37.4662683, 126.7100851),
                LatLng(37.4662627, 126.710098),
                LatLng(37.466257, 126.7101096),
                LatLng(37.4662473, 126.7101211),
                LatLng(37.4662376, 126.7101338),
                LatLng(37.4662202, 126.7101597),
                LatLng(37.4662096, 126.7101784),
                LatLng(37.466202, 126.7101945),
                LatLng(37.466194, 126.7102221),
                LatLng(37.4661885, 126.7102436),
                LatLng(37.4661801, 126.7102675),
                LatLng(37.4661698, 126.7102843),
                LatLng(37.4661578, 126.7103114),
                LatLng(37.466152, 126.7103291),
                LatLng(37.4661451, 126.7103427),
                LatLng(37.4661365, 126.7103571),
                LatLng(37.466129, 126.7103729),
                LatLng(37.4661219, 126.7103916),
                LatLng(37.4661143, 126.7104124),
                LatLng(37.466104, 126.7104411),
                LatLng(37.4661014, 126.7104478),
                LatLng(37.4660935, 126.7104654),
                LatLng(37.4660812, 126.710477),
                LatLng(37.4660693, 126.7104779),
                LatLng(37.466057, 126.7104814),
                LatLng(37.4660488, 126.7104886),
                LatLng(37.4660461, 126.710508),
                LatLng(37.4660464, 126.710534),
                LatLng(37.4660469, 126.7105625),
                LatLng(37.4660447, 126.7105884),
                LatLng(37.4660366, 126.710601),
                LatLng(37.46603, 126.7106154),
                LatLng(37.4660222, 126.7106305),
                LatLng(37.4660132, 126.710646),
                LatLng(37.4659954, 126.710669),
                LatLng(37.4659867, 126.7106801),
                LatLng(37.4659815, 126.7106945),
                LatLng(37.4659768, 126.710704),
                LatLng(37.4659678, 126.7107103),
                LatLng(37.4659599, 126.7107217),
                LatLng(37.4659473, 126.7107349),
                LatLng(37.4659384, 126.7107508),
                LatLng(37.4659235, 126.7107762),
                LatLng(37.4659134, 126.7107922),
                LatLng(37.4659005, 126.7108164),
                LatLng(37.465895, 126.7108298),
                LatLng(37.4658876, 126.7108424),
                LatLng(37.4658781, 126.710854),
                LatLng(37.4658692, 126.7108659),
                LatLng(37.4658625, 126.7108778),
                LatLng(37.4658557, 126.7108917),
                LatLng(37.4658484, 126.7109041),
                LatLng(37.4658347, 126.710923),
                LatLng(37.4658208, 126.7109345),
                LatLng(37.4658126, 126.7109444),
                LatLng(37.465805, 126.710955),
                LatLng(37.4657973, 126.7109641),
                LatLng(37.4657895, 126.7109762),
                LatLng(37.4657799, 126.7109855),
                LatLng(37.4657665, 126.7109864),
                LatLng(37.465755, 126.7109878),
                LatLng(37.4657453, 126.7109915),
                LatLng(37.4657366, 126.7109975),
                LatLng(37.4657252, 126.7110089),
                LatLng(37.4657125, 126.711024),
                LatLng(37.4657012, 126.7110608),
                LatLng(37.4656944, 126.7110772),
                LatLng(37.4656831, 126.7110925),
                LatLng(37.4656695, 126.7111066),
                LatLng(37.4656525, 126.7111191),
                LatLng(37.4656408, 126.7111309),
                LatLng(37.46562, 126.7111502),
                LatLng(37.4656074, 126.7111636),
                LatLng(37.4655998, 126.7111769),
                LatLng(37.4655917, 126.7111934),
                LatLng(37.4655869, 126.7112096),
                LatLng(37.4655809, 126.7112276),
                LatLng(37.4655744, 126.7112569),
                LatLng(37.4655716, 126.7112742),
                LatLng(37.4655715, 126.7112921),
                LatLng(37.46557, 126.7113097),
                LatLng(37.4655757, 126.7113346),
                LatLng(37.4655834, 126.7113689),
                LatLng(37.4655858, 126.7113934),
                LatLng(37.465585, 126.7114152),
                LatLng(37.4655812, 126.7114381),
                LatLng(37.4655722, 126.7114593),
                LatLng(37.4655587, 126.711476),
                LatLng(37.4655483, 126.7114874),
                LatLng(37.4655305, 126.7115088),
                LatLng(37.4655195, 126.7115224),
                LatLng(37.4655063, 126.7115393),
                LatLng(37.4654992, 126.7115547),
                LatLng(37.4654917, 126.7115701),
                LatLng(37.4654822, 126.7115858),
                LatLng(37.4654744, 126.7116023),
                LatLng(37.4654663, 126.7116189),
                LatLng(37.4654587, 126.7116351),
                LatLng(37.4654498, 126.7116537),
                LatLng(37.465441, 126.7116696),
                LatLng(37.4654313, 126.7116837),
                LatLng(37.4654194, 126.7116981),
                LatLng(37.4654125, 126.7117175),
                LatLng(37.4654012, 126.7117367),
                LatLng(37.4653845, 126.7117672),
                LatLng(37.4653768, 126.7117868),
                LatLng(37.4653696, 126.711804),
                LatLng(37.4653598, 126.7118263),
                LatLng(37.4653541, 126.7118424),
                LatLng(37.4653476, 126.7118596),
                LatLng(37.4653431, 126.7118744),
                LatLng(37.4653387, 126.7118864),
                LatLng(37.4653369, 126.7119005),
                LatLng(37.465333, 126.7119158),
                LatLng(37.4653275, 126.7119321),
                LatLng(37.4653211, 126.7119459),
                LatLng(37.4653146, 126.7119604),
                LatLng(37.4653071, 126.7119765),
                LatLng(37.4652986, 126.7119938),
                LatLng(37.4652915, 126.7120064),
                LatLng(37.4652831, 126.7120196),
                LatLng(37.4652718, 126.7120315),
                LatLng(37.4652622, 126.7120442),
                LatLng(37.4652531, 126.7120601),
                LatLng(37.4652371, 126.7120885),
                LatLng(37.4652281, 126.7121013),
                LatLng(37.465218, 126.7121125),
                LatLng(37.4652086, 126.712126),
                LatLng(37.4652026, 126.7121355),
                LatLng(37.4651948, 126.7121489),
                LatLng(37.4651824, 126.7121688),
                LatLng(37.4651755, 126.7121812),
                LatLng(37.4651702, 126.7121908),
                LatLng(37.4651647, 126.7122023),
                LatLng(37.4651591, 126.7122168),
                LatLng(37.4651531, 126.7122288),
                LatLng(37.4651464, 126.7122401),
                LatLng(37.4651407, 126.7122529),
                LatLng(37.4651368, 126.7122653),
                LatLng(37.4651344, 126.7122779),
                LatLng(37.465131, 126.712289),
                LatLng(37.4651265, 126.7122988),
                LatLng(37.4651205, 126.712311),
                LatLng(37.4651132, 126.7123267),
                LatLng(37.465106, 126.7123402),
                LatLng(37.4650938, 126.7123575),
                LatLng(37.4650835, 126.7123745),
                LatLng(37.4650708, 126.7123934),
                LatLng(37.4650499, 126.7124191),
                LatLng(37.4650361, 126.7124361),
                LatLng(37.4650225, 126.7124529),
                LatLng(37.4650058, 126.7124673),
                LatLng(37.4649906, 126.7124739),
                LatLng(37.4649767, 126.7124737),
                LatLng(37.4649602, 126.7124705),
                LatLng(37.4649512, 126.7124862),
                LatLng(37.4649492, 126.7125046),
                LatLng(37.4649501, 126.7125203),
                LatLng(37.4649608, 126.7125608),
                LatLng(37.4649672, 126.7125776),
                LatLng(37.4649736, 126.7125932),
                LatLng(37.4649871, 126.7126129),
                LatLng(37.464993, 126.712647),
                LatLng(37.4649912, 126.7126701),
                LatLng(37.4649856, 126.7126892),
                LatLng(37.4649775, 126.7127065),
                LatLng(37.4649627, 126.7127225),
                LatLng(37.4649557, 126.7127337),
                LatLng(37.4649504, 126.7127458),
                LatLng(37.464946, 126.712759),
                LatLng(37.4649395, 126.7127731),
                LatLng(37.4649146, 126.7127976),
                LatLng(37.4648983, 126.7128077),
                LatLng(37.4648788, 126.7128153),
                LatLng(37.4648607, 126.7128228),
                LatLng(37.4648431, 126.7128259),
                LatLng(37.4648253, 126.7128335),
                LatLng(37.4648136, 126.7128451),
                LatLng(37.4648049, 126.7128616),
                LatLng(37.4647956, 126.7128732),
                LatLng(37.4647881, 126.7128879),
                LatLng(37.4647891, 126.7129227),
                LatLng(37.4647861, 126.7129461),
                LatLng(37.4647795, 126.7129584),
                LatLng(37.4647708, 126.7129704),
                LatLng(37.4647639, 126.7129858),
                LatLng(37.4647603, 126.7130029),
                LatLng(37.4647583, 126.7130206),
                LatLng(37.4647545, 126.7130345),
                LatLng(37.4647478, 126.7130635),
                LatLng(37.4647443, 126.7130809),
                LatLng(37.4647394, 126.7130964),
                LatLng(37.4647285, 126.7131116),
                LatLng(37.4647159, 126.7131292),
                LatLng(37.4647057, 126.7131456),
                LatLng(37.4646991, 126.7131593),
                LatLng(37.4646934, 126.7131734),
                LatLng(37.4646875, 126.7131909),
                LatLng(37.4646789, 126.7132122),
                LatLng(37.4646715, 126.7132333),
                LatLng(37.4646619, 126.7132437),
                LatLng(37.4646479, 126.7132629),
                LatLng(37.4646414, 126.7132756),
                LatLng(37.4646348, 126.7132894),
                LatLng(37.4646298, 126.7133009),
                LatLng(37.4646206, 126.7133122),
                LatLng(37.4646149, 126.7133227),
                LatLng(37.4646098, 126.7133358),
                LatLng(37.4646061, 126.7133467),
                LatLng(37.464603, 126.7133605),
                LatLng(37.4646019, 126.7133734),
                LatLng(37.464599, 126.7133878),
                LatLng(37.4645948, 126.7134),
                LatLng(37.4645875, 126.7134255),
                LatLng(37.4645812, 126.7134534),
                LatLng(37.4645759, 126.7134724),
                LatLng(37.4645694, 126.7134927),
                LatLng(37.4645563, 126.7135283),
                LatLng(37.4645443, 126.7135496),
                LatLng(37.4645306, 126.7135719),
                LatLng(37.464508, 126.7135898),
                LatLng(37.4644956, 126.7136028),
                LatLng(37.464484, 126.7136178),
                LatLng(37.4644743, 126.7136345),
                LatLng(37.4644675, 126.7136515),
                LatLng(37.4644636, 126.7136662),
                LatLng(37.4644597, 126.7136802),
                LatLng(37.4644576, 126.7136964),
                LatLng(37.4644552, 126.713714),
                LatLng(37.4644521, 126.7137293),
                LatLng(37.4644461, 126.7137394),
                LatLng(37.4644411, 126.7137507),
                LatLng(37.4644363, 126.7137647),
                LatLng(37.4644316, 126.7137803),
                LatLng(37.464423, 126.7137995),
                LatLng(37.4644156, 126.7138137),
                LatLng(37.4644078, 126.7138304),
                LatLng(37.4644007, 126.7138491),
                LatLng(37.4643935, 126.7138676),
                LatLng(37.4643798, 126.7138961),
                LatLng(37.4643711, 126.7139144),
                LatLng(37.4643646, 126.7139283),
                LatLng(37.464357, 126.7139399),
                LatLng(37.4643412, 126.7139584),
                LatLng(37.464328, 126.7139763),
                LatLng(37.4643183, 126.7139875),
                LatLng(37.4643093, 126.7140037),
                LatLng(37.4643039, 126.7140141),
                LatLng(37.4642993, 126.7140268),
                LatLng(37.464292, 126.7140472),
                LatLng(37.4642865, 126.714059),
                LatLng(37.4642785, 126.7140716),
                LatLng(37.4642659, 126.7140843),
                LatLng(37.4642541, 126.7140961),
                LatLng(37.4642453, 126.7141115),
                LatLng(37.464234, 126.7141372),
                LatLng(37.4642233, 126.7141557),
                LatLng(37.4642128, 126.7141673),
                LatLng(37.4642035, 126.7141797),
                LatLng(37.4641959, 126.71419),
                LatLng(37.464185, 126.7142112),
                LatLng(37.4641798, 126.7142278),
                LatLng(37.4641774, 126.7142462),
                LatLng(37.4641809, 126.7142696),
                LatLng(37.4641842, 126.7142954),
                LatLng(37.4641852, 126.714304)
            ), mutableListOf(
                LatLng(37.4642482, 126.7160198),
                LatLng(37.4636783, 126.716841),
                LatLng(37.4633932, 126.7172668),
                LatLng(37.4632712, 126.7174425),
                LatLng(37.4632274, 126.7175235),
                LatLng(37.4632215, 126.7173753),
                LatLng(37.4631669, 126.7173289),
                LatLng(37.4631878, 126.7172728),
                LatLng(37.4631793, 126.7172548),
                LatLng(37.4631657, 126.71725),
                LatLng(37.463155, 126.7172495),
                LatLng(37.4631563, 126.717261),
                LatLng(37.4631551, 126.717279),
                LatLng(37.4631599, 126.7173075),
                LatLng(37.4631748, 126.7173471),
                LatLng(37.4631858, 126.7173808),
                LatLng(37.4631953, 126.7174133),
                LatLng(37.4632019, 126.7174386),
                LatLng(37.4632052, 126.7174582),
                LatLng(37.4632081, 126.7174796),
                LatLng(37.4632059, 126.717482),
                LatLng(37.4632052, 126.7174902),
                LatLng(37.4632039, 126.7174971),
                LatLng(37.4632004, 126.7175003),
                LatLng(37.463199, 126.7175006),
                LatLng(37.4631971, 126.7175044),
                LatLng(37.4631966, 126.7175081),
                LatLng(37.4631953, 126.717511),
                LatLng(37.4631958, 126.7175135),
                LatLng(37.4631963, 126.7175145),
                LatLng(37.4631965, 126.7175146),
                LatLng(37.4631965, 126.7175146),
                LatLng(37.4631965, 126.7175145),
                LatLng(37.4631966, 126.7175149),
                LatLng(37.4631965, 126.7175142),
                LatLng(37.4631965, 126.7175141),
                LatLng(37.4631964, 126.7175141),
                LatLng(37.4631964, 126.717514),
                LatLng(37.4631964, 126.717514),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631964, 126.7175139),
                LatLng(37.4631923, 126.7175279),
                LatLng(37.4631893, 126.7175406),
                LatLng(37.4631854, 126.7175546),
                LatLng(37.4631794, 126.717573),
                LatLng(37.4631761, 126.7175885),
                LatLng(37.4631723, 126.7176042),
                LatLng(37.4631664, 126.717619),
                LatLng(37.4631507, 126.7176525),
                LatLng(37.4631481, 126.7176567),
                LatLng(37.4631464, 126.7176698),
                LatLng(37.4631496, 126.7176564),
                LatLng(37.4631475, 126.7176527),
                LatLng(37.4631443, 126.717667),
                LatLng(37.4631388, 126.7176903),
                LatLng(37.463135, 126.7177329),
                LatLng(37.4631228, 126.7177673),
                LatLng(37.4631128, 126.7177968),
                LatLng(37.4631061, 126.717811),
                LatLng(37.4630994, 126.7178227),
                LatLng(37.4630923, 126.7178352),
                LatLng(37.4630846, 126.7178449),
                LatLng(37.4630759, 126.7178566),
                LatLng(37.463066, 126.7178733),
                LatLng(37.463051, 126.7179097),
                LatLng(37.4630445, 126.7179266),
                LatLng(37.4630397, 126.7179485),
                LatLng(37.4630324, 126.717985),
                LatLng(37.4630303, 126.7180042),
                LatLng(37.4630432, 126.7180245),
                LatLng(37.4630577, 126.718041),
                LatLng(37.4630699, 126.7180561),
                LatLng(37.4630818, 126.7180776),
                LatLng(37.4630874, 126.7180987),
                LatLng(37.463088, 126.7181175),
                LatLng(37.4630881, 126.7181456),
                LatLng(37.4630842, 126.71816),
                LatLng(37.4630796, 126.7181763),
                LatLng(37.4630691, 126.7181945),
                LatLng(37.4630498, 126.71821),
                LatLng(37.4630288, 126.7182194),
                LatLng(37.4630119, 126.7182286),
                LatLng(37.4629906, 126.7182365),
                LatLng(37.4629701, 126.7182403),
                LatLng(37.4629413, 126.7182418),
                LatLng(37.462919, 126.7182469),
                LatLng(37.462885, 126.7182582),
                LatLng(37.4628577, 126.7182622),
                LatLng(37.4628431, 126.7182596),
                LatLng(37.4628314, 126.7182622),
                LatLng(37.4628187, 126.7182668),
                LatLng(37.4628012, 126.7182703),
                LatLng(37.4627818, 126.7182702),
                LatLng(37.4627426, 126.718277),
                LatLng(37.462726, 126.7182961),
                LatLng(37.4627129, 126.7183189),
                LatLng(37.462699, 126.7183412),
                LatLng(37.4626892, 126.7183563),
                LatLng(37.4626777, 126.718373),
                LatLng(37.4626784, 126.718391),
                LatLng(37.4626849, 126.7184083),
                LatLng(37.4626923, 126.7184299),
                LatLng(37.4626988, 126.7184507),
                LatLng(37.4627001, 126.7184685),
                LatLng(37.4626995, 126.7184871),
                LatLng(37.4626945, 126.7185127),
                LatLng(37.4626872, 126.7185316),
                LatLng(37.4626827, 126.718546),
                LatLng(37.4626793, 126.7185625),
                LatLng(37.4626746, 126.7185761),
                LatLng(37.4626728, 126.7185901),
                LatLng(37.4626756, 126.7186051),
                LatLng(37.4626809, 126.7186135),
                LatLng(37.4626872, 126.7186288),
                LatLng(37.4626823, 126.7186621),
                LatLng(37.4626756, 126.7186803),
                LatLng(37.462662, 126.7186988),
                LatLng(37.462639, 126.718724),
                LatLng(37.4626235, 126.7187375),
                LatLng(37.4626104, 126.7187475),
                LatLng(37.46259, 126.7187753),
                LatLng(37.4625794, 126.7187901),
                LatLng(37.4625697, 126.7187893),
                LatLng(37.4625601, 126.7187774),
                LatLng(37.4625479, 126.7187573),
                LatLng(37.4625344, 126.7187463),
                LatLng(37.4625193, 126.7187467),
                LatLng(37.4625065, 126.7187496),
                LatLng(37.4624933, 126.7187549),
                LatLng(37.4624758, 126.7187593),
                LatLng(37.4624575, 126.718765),
                LatLng(37.4624411, 126.7187729),
                LatLng(37.462426, 126.7187813),
                LatLng(37.4624094, 126.7187899),
                LatLng(37.4623937, 126.7188014),
                LatLng(37.4623802, 126.7188183),
                LatLng(37.4623708, 126.7188395),
                LatLng(37.4623602, 126.7188789),
                LatLng(37.4623515, 126.718905),
                LatLng(37.4623512, 126.718939),
                LatLng(37.462347, 126.7189642),
                LatLng(37.4623379, 126.7189804),
                LatLng(37.4623285, 126.7189906),
                LatLng(37.4623221, 126.7190016),
                LatLng(37.4623228, 126.7190235),
                LatLng(37.4623222, 126.7190434),
                LatLng(37.4623255, 126.7190704),
                LatLng(37.4623303, 126.7190921),
                LatLng(37.4623317, 126.7191064),
                LatLng(37.4623358, 126.7191271),
                LatLng(37.4623409, 126.7191522),
                LatLng(37.4623421, 126.7191742),
                LatLng(37.4623412, 126.719189),
                LatLng(37.4623395, 126.7192033),
                LatLng(37.4623364, 126.719215),
                LatLng(37.4623324, 126.7192252),
                LatLng(37.4623283, 126.719234),
                LatLng(37.4623266, 126.7192408),
                LatLng(37.4623358, 126.7192489),
                LatLng(37.4623394, 126.7192559),
                LatLng(37.462333, 126.7192635),
                LatLng(37.4623224, 126.7192753),
                LatLng(37.4623148, 126.7192829),
                LatLng(37.4623082, 126.7192919),
                LatLng(37.4622928, 126.7193004),
                LatLng(37.4622738, 126.71931),
                LatLng(37.4622556, 126.7193184),
                LatLng(37.462245, 126.7193181),
                LatLng(37.4622222, 126.7193151),
                LatLng(37.4622072, 126.7193185),
                LatLng(37.4621955, 126.7193173),
                LatLng(37.4621892, 126.7193137),
                LatLng(37.462185, 126.7193069),
                LatLng(37.462163, 126.7193344),
                LatLng(37.4621475, 126.7193471),
                LatLng(37.4621329, 126.7193801),
                LatLng(37.4621133, 126.7194209),
                LatLng(37.4620989, 126.7194438),
                LatLng(37.4620927, 126.7194585),
                LatLng(37.4620956, 126.7194838),
                LatLng(37.4620939, 126.7195237),
                LatLng(37.4620907, 126.7195444),
                LatLng(37.4620877, 126.7195719),
                LatLng(37.4620811, 126.7196061),
                LatLng(37.4620795, 126.7196282),
                LatLng(37.4620767, 126.7196477),
                LatLng(37.4620748, 126.7196632),
                LatLng(37.4620739, 126.719678),
                LatLng(37.462079, 126.7197188),
                LatLng(37.4620797, 126.7197388),
                LatLng(37.4620795, 126.7197533),
                LatLng(37.4620789, 126.719767),
                LatLng(37.4620786, 126.7197796),
                LatLng(37.4620806, 126.7197924),
                LatLng(37.4620845, 126.7198036),
                LatLng(37.4620883, 126.7198105),
                LatLng(37.4620929, 126.7198219),
                LatLng(37.4620964, 126.7198367),
                LatLng(37.4620802, 126.7198453),
                LatLng(37.4620709, 126.7198524),
                LatLng(37.462041, 126.7198787),
                LatLng(37.4620224, 126.7198826),
                LatLng(37.4619833, 126.719908),
                LatLng(37.4619624, 126.7199226),
                LatLng(37.4619407, 126.7199414),
                LatLng(37.4619055, 126.7199927),
                LatLng(37.4618813, 126.7200218),
                LatLng(37.4618623, 126.7200362),
                LatLng(37.4618431, 126.720055),
                LatLng(37.46183, 126.7200767),
                LatLng(37.4618219, 126.7201021),
                LatLng(37.4618192, 126.7201172),
                LatLng(37.4618215, 126.720137),
                LatLng(37.4618395, 126.7201469),
                LatLng(37.4618617, 126.7201494),
                LatLng(37.4618775, 126.7201467),
                LatLng(37.4618945, 126.7201443),
                LatLng(37.4619251, 126.7201361),
                LatLng(37.4619423, 126.7201298),
                LatLng(37.461965, 126.7201133),
                LatLng(37.4619761, 126.7201027),
                LatLng(37.461999, 126.7200951),
                LatLng(37.4620312, 126.7201107),
                LatLng(37.4620444, 126.7201261),
                LatLng(37.4620521, 126.7201379),
                LatLng(37.4620592, 126.7201502),
                LatLng(37.4620807, 126.7201565),
                LatLng(37.4620914, 126.7201468),
                LatLng(37.462109, 126.7201405),
                LatLng(37.462123, 126.7201461),
                LatLng(37.4621366, 126.7201526),
                LatLng(37.4621526, 126.7201542),
                LatLng(37.4621676, 126.7201571),
                LatLng(37.4621835, 126.7201628),
                LatLng(37.4622028, 126.7201728),
                LatLng(37.4622209, 126.7201791),
                LatLng(37.4622372, 126.7201815),
                LatLng(37.4622503, 126.7201826),
                LatLng(37.4622637, 126.7201832),
                LatLng(37.462276, 126.7201874),
                LatLng(37.4622905, 126.7201946),
                LatLng(37.4623019, 126.720199),
                LatLng(37.4623142, 126.7202018),
                LatLng(37.4623272, 126.7202043),
                LatLng(37.4623404, 126.7202109),
                LatLng(37.4623502, 126.7202189),
                LatLng(37.4623589, 126.720229),
                LatLng(37.4623642, 126.7202409),
                LatLng(37.4623684, 126.7202533),
                LatLng(37.4623707, 126.7202647),
                LatLng(37.4623767, 126.720273),
                LatLng(37.4623821, 126.7202854),
                LatLng(37.4623987, 126.7202911),
                LatLng(37.4624523, 126.7202788),
                LatLng(37.4624836, 126.7202709),
                LatLng(37.4625126, 126.7202664),
                LatLng(37.4625438, 126.7202713),
                LatLng(37.4625716, 126.7202835),
                LatLng(37.4625844, 126.7202982),
                LatLng(37.4626056, 126.7203268),
                LatLng(37.4626185, 126.720349),
                LatLng(37.4626286, 126.7203745),
                LatLng(37.4626378, 126.7203932),
                LatLng(37.4626452, 126.7204113),
                LatLng(37.4626507, 126.72043),
                LatLng(37.4626542, 126.7204455),
                LatLng(37.4626548, 126.720459),
                LatLng(37.462656, 126.720475),
                LatLng(37.4626566, 126.7204895),
                LatLng(37.4626567, 126.7205037),
                LatLng(37.4626544, 126.7205366),
                LatLng(37.4626516, 126.720554),
                LatLng(37.46265, 126.7205686),
                LatLng(37.4626527, 126.7205924),
                LatLng(37.4626528, 126.7206179),
                LatLng(37.4626475, 126.7206347),
                LatLng(37.4626362, 126.7206496),
                LatLng(37.4626245, 126.7206636),
                LatLng(37.4626151, 126.7206761),
                LatLng(37.4626055, 126.7206846),
                LatLng(37.4625976, 126.7206954),
                LatLng(37.46259, 126.7207134),
                LatLng(37.4625866, 126.7207323),
                LatLng(37.4625833, 126.7207535),
                LatLng(37.4625814, 126.7207696),
                LatLng(37.4625806, 126.7207909),
                LatLng(37.4625829, 126.7208178),
                LatLng(37.4625863, 126.7208421),
                LatLng(37.4625906, 126.7208628),
                LatLng(37.4625916, 126.7208819),
                LatLng(37.4625909, 126.7209014),
                LatLng(37.4625922, 126.7209297),
                LatLng(37.462596, 126.7209481),
                LatLng(37.4626014, 126.7209641),
                LatLng(37.4626098, 126.7209817),
                LatLng(37.4626117, 126.7210037),
                LatLng(37.4626125, 126.7210253),
                LatLng(37.4626114, 126.721043),
                LatLng(37.462606, 126.7210583),
                LatLng(37.462598, 126.7210766),
                LatLng(37.4625877, 126.7210957),
                LatLng(37.4625817, 126.7211165),
                LatLng(37.462575, 126.7211331),
                LatLng(37.4625698, 126.721151),
                LatLng(37.4625649, 126.7211652),
                LatLng(37.4625646, 126.7211829),
                LatLng(37.4625632, 126.7211992),
                LatLng(37.462563, 126.7212172),
                LatLng(37.4625632, 126.7212308),
                LatLng(37.4625634, 126.7212451),
                LatLng(37.4625645, 126.7212607),
                LatLng(37.4625662, 126.721273),
                LatLng(37.4625686, 126.7212889),
                LatLng(37.4625694, 126.7213051),
                LatLng(37.4625694, 126.7213259),
                LatLng(37.4625692, 126.7213458),
                LatLng(37.4625639, 126.7213681),
                LatLng(37.4625582, 126.7213956),
                LatLng(37.4625488, 126.721412),
                LatLng(37.4625451, 126.7214357),
                LatLng(37.462548, 126.7214487),
                LatLng(37.462552, 126.7214572),
                LatLng(37.4625646, 126.721458),
                LatLng(37.4625713, 126.7214623),
                LatLng(37.4625783, 126.7214742),
                LatLng(37.462583, 126.7214962),
                LatLng(37.4625865, 126.7215253),
                LatLng(37.4625879, 126.7215505),
                LatLng(37.4625866, 126.7215679),
                LatLng(37.462585, 126.7215845),
                LatLng(37.4625865, 126.7216169),
                LatLng(37.4625901, 126.7216294),
                LatLng(37.4625857, 126.7216514),
                LatLng(37.462576, 126.7216788),
                LatLng(37.4625631, 126.7217038),
                LatLng(37.4625557, 126.7217364),
                LatLng(37.46255, 126.7217581),
                LatLng(37.4625406, 126.7217848),
                LatLng(37.4625283, 126.7218045),
                LatLng(37.4625199, 126.7218237),
                LatLng(37.462498, 126.7218555),
                LatLng(37.462487, 126.7218774),
                LatLng(37.4624805, 126.721895),
                LatLng(37.4624731, 126.721921),
                LatLng(37.4624529, 126.7219478),
                LatLng(37.4624455, 126.7219616),
                LatLng(37.4624234, 126.7219699),
                LatLng(37.4623925, 126.7219758),
                LatLng(37.4623762, 126.7219733),
                LatLng(37.462362, 126.7219712),
                LatLng(37.4623516, 126.7219538),
                LatLng(37.4623474, 126.721931),
                LatLng(37.4623462, 126.7219184),
                LatLng(37.4623437, 126.7219078),
                LatLng(37.4623355, 126.7218985),
                LatLng(37.4623205, 126.7218874),
                LatLng(37.4622826, 126.7218769),
                LatLng(37.4622638, 126.7218667),
                LatLng(37.4622461, 126.7218543),
                LatLng(37.4622309, 126.7218416),
                LatLng(37.4622123, 126.7218343),
                LatLng(37.4622019, 126.7218311),
                LatLng(37.4621898, 126.7218279),
                LatLng(37.4621743, 126.7218296),
                LatLng(37.462152, 126.7218392),
                LatLng(37.4621328, 126.7218476),
                LatLng(37.4621179, 126.7218543),
                LatLng(37.4621027, 126.7218608),
                LatLng(37.462071, 126.7218864),
                LatLng(37.4620607, 126.7218839),
                LatLng(37.4620479, 126.7218855),
                LatLng(37.4620373, 126.7218907),
                LatLng(37.4620256, 126.7218969),
                LatLng(37.462013, 126.721903),
                LatLng(37.4619855, 126.7219121),
                LatLng(37.4619724, 126.7219133),
                LatLng(37.4619625, 126.7219154),
                LatLng(37.4619526, 126.7219181),
                LatLng(37.4619401, 126.7219195),
                LatLng(37.4619317, 126.7219124),
                LatLng(37.4619241, 126.7219084),
                LatLng(37.4619171, 126.7219135),
                LatLng(37.4619058, 126.7219252),
                LatLng(37.4618988, 126.7219352),
                LatLng(37.4618891, 126.7219525),
                LatLng(37.4618814, 126.7219697),
                LatLng(37.4618765, 126.721983),
                LatLng(37.4618675, 126.7219982),
                LatLng(37.4618594, 126.7220139),
                LatLng(37.4618555, 126.7220286),
                LatLng(37.4618552, 126.7220432),
                LatLng(37.4618579, 126.7220611),
                LatLng(37.4618612, 126.7220789),
                LatLng(37.4618649, 126.7220965),
                LatLng(37.4618667, 126.7221138),
                LatLng(37.4618654, 126.7221245),
                LatLng(37.4618628, 126.7221375),
                LatLng(37.4618612, 126.7221527),
                LatLng(37.461859, 126.7221696),
                LatLng(37.4618426, 126.7221928),
                LatLng(37.4618337, 126.7222104),
                LatLng(37.4618288, 126.7222271),
                LatLng(37.4618247, 126.7222442),
                LatLng(37.4618413, 126.7222555),
                LatLng(37.461839, 126.7222725),
                LatLng(37.4618261, 126.7222898),
                LatLng(37.4618192, 126.7223063),
                LatLng(37.4618149, 126.7223209),
                LatLng(37.4618121, 126.7223293),
                LatLng(37.4618103, 126.7223438),
                LatLng(37.4618081, 126.7223601),
                LatLng(37.4618061, 126.722375),
                LatLng(37.4618071, 126.7223927),
                LatLng(37.4618025, 126.7224075),
                LatLng(37.4617991, 126.7224215),
                LatLng(37.4617958, 126.7224385),
                LatLng(37.4617929, 126.7224517),
                LatLng(37.461784, 126.7224838),
                LatLng(37.4617781, 126.7224989),
                LatLng(37.4617742, 126.7225165),
                LatLng(37.4617724, 126.7225309),
                LatLng(37.4617705, 126.7225617),
                LatLng(37.4617783, 126.7225833),
                LatLng(37.4617799, 126.7226013),
                LatLng(37.4617805, 126.722619),
                LatLng(37.4617792, 126.7226324),
                LatLng(37.4617762, 126.7226479),
                LatLng(37.461763, 126.7226538),
                LatLng(37.4617562, 126.7226713),
                LatLng(37.4617531, 126.7226905),
                LatLng(37.4617521, 126.7227084),
                LatLng(37.4617538, 126.7227309),
                LatLng(37.4617542, 126.7227464),
                LatLng(37.4617554, 126.722764),
                LatLng(37.4617573, 126.7227828),
                LatLng(37.4617595, 126.7227985),
                LatLng(37.4617612, 126.7228141),
                LatLng(37.4617627, 126.7228313),
                LatLng(37.4617617, 126.7228496),
                LatLng(37.4617602, 126.7228655),
                LatLng(37.4617559, 126.7228845),
                LatLng(37.4617522, 126.7229033),
                LatLng(37.4617443, 126.7229452),
                LatLng(37.4617389, 126.7229638),
                LatLng(37.4617339, 126.7229789),
                LatLng(37.4617237, 126.7230123),
                LatLng(37.4617196, 126.7230291),
                LatLng(37.4617159, 126.7230438),
                LatLng(37.4617143, 126.7230563),
                LatLng(37.4617182, 126.7230958),
                LatLng(37.4617188, 126.7231173),
                LatLng(37.4617188, 126.7231339),
                LatLng(37.461706, 126.7231235),
                LatLng(37.4616993, 126.7231205),
                LatLng(37.4616959, 126.7231308),
                LatLng(37.4616913, 126.7231485),
                LatLng(37.4616874, 126.7231651),
                LatLng(37.4616849, 126.7231816),
                LatLng(37.4616924, 126.723211),
                LatLng(37.4616941, 126.7232434),
                LatLng(37.461689, 126.7232657),
                LatLng(37.4616856, 126.7232829),
                LatLng(37.4616854, 126.7232961),
                LatLng(37.4616929, 126.7233047),
                LatLng(37.4617015, 126.7233132),
                LatLng(37.4617153, 126.7233144),
                LatLng(37.4617283, 126.7233159),
                LatLng(37.4617396, 126.723317),
                LatLng(37.4617493, 126.7233151),
                LatLng(37.4617635, 126.7233106),
                LatLng(37.4617737, 126.7233126),
                LatLng(37.4617864, 126.7233098),
                LatLng(37.4617962, 126.7233122),
                LatLng(37.461805, 126.7233104),
                LatLng(37.4618193, 126.7233074),
                LatLng(37.4618313, 126.7233141),
                LatLng(37.4618475, 126.7233211),
                LatLng(37.4618611, 126.7233298),
                LatLng(37.4618736, 126.7233318),
                LatLng(37.4619079, 126.7233341),
                LatLng(37.46192, 126.7233359),
                LatLng(37.4619302, 126.7233342),
                LatLng(37.4619412, 126.7233325),
                LatLng(37.4619563, 126.7233323),
                LatLng(37.461971, 126.7233319),
                LatLng(37.4619841, 126.7233306),
                LatLng(37.4619972, 126.7233306),
                LatLng(37.4620105, 126.723335),
                LatLng(37.4620208, 126.7233538),
                LatLng(37.4620262, 126.7233672),
                LatLng(37.4620313, 126.7233811),
                LatLng(37.4620342, 126.7234017),
                LatLng(37.4620341, 126.72343),
                LatLng(37.462033, 126.7234579),
                LatLng(37.4620213, 126.7234978),
                LatLng(37.4620167, 126.7235189),
                LatLng(37.4620133, 126.723548),
                LatLng(37.4620084, 126.7235619),
                LatLng(37.4620045, 126.7235714),
                LatLng(37.4620005, 126.7235833),
                LatLng(37.4619967, 126.7235966),
                LatLng(37.4619917, 126.723611),
                LatLng(37.4619894, 126.7236239),
                LatLng(37.4619856, 126.723638),
                LatLng(37.4619826, 126.7236547),
                LatLng(37.4619805, 126.7236742),
                LatLng(37.4619799, 126.7237002),
                LatLng(37.4619789, 126.7237372),
                LatLng(37.4619775, 126.723754),
                LatLng(37.4619769, 126.7237726),
                LatLng(37.4619766, 126.7237921),
                LatLng(37.4619755, 126.7238069),
                LatLng(37.4619742, 126.7238238),
                LatLng(37.4619731, 126.7238411),
                LatLng(37.4619668, 126.7238571),
                LatLng(37.4619632, 126.7238716),
                LatLng(37.4619603, 126.7238847),
                LatLng(37.4619582, 126.7238978),
                LatLng(37.4619556, 126.7239129),
                LatLng(37.4619538, 126.7239282),
                LatLng(37.4619523, 126.7239455),
                LatLng(37.4619497, 126.72396),
                LatLng(37.4619466, 126.7239774),
                LatLng(37.4619438, 126.7239952),
                LatLng(37.4619418, 126.7240119),
                LatLng(37.4619399, 126.7240283),
                LatLng(37.4619378, 126.724044),
                LatLng(37.4619351, 126.7240626),
                LatLng(37.4619333, 126.7240799),
                LatLng(37.461929, 126.7240986),
                LatLng(37.4619245, 126.7241177),
                LatLng(37.4619195, 126.724136),
                LatLng(37.461914, 126.7241541),
                LatLng(37.4619078, 126.7241696),
                LatLng(37.4619012, 126.7241865),
                LatLng(37.4618957, 126.7242004),
                LatLng(37.4618915, 126.7242141),
                LatLng(37.4618883, 126.7242278),
                LatLng(37.4618858, 126.7242416),
                LatLng(37.4618832, 126.724256),
                LatLng(37.4618805, 126.7242716),
                LatLng(37.4618769, 126.7242876),
                LatLng(37.4618745, 126.7243047),
                LatLng(37.4618731, 126.7243213),
                LatLng(37.4618718, 126.7243356),
                LatLng(37.46187, 126.7243515),
                LatLng(37.4618674, 126.724368),
                LatLng(37.4618654, 126.7243855),
                LatLng(37.4618651, 126.7244029),
                LatLng(37.4618646, 126.7244201),
                LatLng(37.4618616, 126.7244421),
                LatLng(37.4618583, 126.7244548),
                LatLng(37.4618556, 126.7244695),
                LatLng(37.4618537, 126.7244817),
                LatLng(37.4618525, 126.7245003),
                LatLng(37.4618528, 126.7245183),
                LatLng(37.4618538, 126.7245358),
                LatLng(37.4618549, 126.7245556),
                LatLng(37.4618562, 126.7245713),
                LatLng(37.4618569, 126.7245874),
                LatLng(37.4618572, 126.7246041),
                LatLng(37.4618579, 126.724618),
                LatLng(37.4618615, 126.724635),
                LatLng(37.461866, 126.7246524),
                LatLng(37.4618719, 126.7246693),
                LatLng(37.4618798, 126.724684),
                LatLng(37.4618878, 126.7246958),
                LatLng(37.4618986, 126.7247079),
                LatLng(37.4619086, 126.7247177),
                LatLng(37.4619185, 126.7247245),
                LatLng(37.4619277, 126.7247303),
                LatLng(37.4619339, 126.7247353),
                LatLng(37.461942, 126.7247422),
                LatLng(37.4619494, 126.7247489),
                LatLng(37.4619569, 126.7247539),
                LatLng(37.4619659, 126.7247554),
                LatLng(37.4619757, 126.7247585),
                LatLng(37.4619889, 126.7247614),
                LatLng(37.462001, 126.7247652),
                LatLng(37.4620142, 126.7247717),
                LatLng(37.462027, 126.7247779),
                LatLng(37.4620386, 126.7247839),
                LatLng(37.4620507, 126.7247883),
                LatLng(37.4620613, 126.7247923),
                LatLng(37.4620736, 126.7247967),
                LatLng(37.4620855, 126.7248017),
                LatLng(37.4620978, 126.7248074),
                LatLng(37.4621107, 126.7248131),
                LatLng(37.4621222, 126.7248186),
                LatLng(37.4621363, 126.7248245),
                LatLng(37.4621501, 126.7248305),
                LatLng(37.4621623, 126.7248349),
                LatLng(37.4621756, 126.7248403),
                LatLng(37.4621898, 126.7248455),
                LatLng(37.4622029, 126.7248511),
                LatLng(37.4622157, 126.7248566),
                LatLng(37.4622262, 126.7248609),
                LatLng(37.4622398, 126.7248667),
                LatLng(37.4622523, 126.7248731),
                LatLng(37.4622648, 126.7248788),
                LatLng(37.4622775, 126.7248838),
                LatLng(37.4622885, 126.7248883),
                LatLng(37.4622996, 126.7248928),
                LatLng(37.4623115, 126.7248966),
                LatLng(37.4623237, 126.7249001),
                LatLng(37.4623321, 126.7249025),
                LatLng(37.4623429, 126.7249041),
                LatLng(37.462353, 126.7249062),
                LatLng(37.4623595, 126.724909),
                LatLng(37.4623627, 126.724911),
                LatLng(37.4623706, 126.724915),
                LatLng(37.4623754, 126.7249207),
                LatLng(37.4623855, 126.7249273),
                LatLng(37.4624023, 126.7249328),
                LatLng(37.4624244, 126.7249314),
                LatLng(37.462449, 126.7249223),
                LatLng(37.4624675, 126.7249135),
                LatLng(37.4624798, 126.7249085),
                LatLng(37.4624913, 126.7249093),
                LatLng(37.4625053, 126.7249117),
                LatLng(37.4625188, 126.7249132),
                LatLng(37.4625267, 126.7249138),
                LatLng(37.4625352, 126.7249177)
            )
        )
//        pathCoords = mutableListOf(pathCoords[0])

        initWalkAfterMap()

        //RangeSeekbar 설정
        binding.courseSetRsb.leftSeekBar.thumbDrawableId = R.drawable.ic_start_marker
        binding.courseSetRsb.rightSeekBar.thumbDrawableId = R.drawable.ic_end_marker

        setMyEventListener()
        initActionFrag()
    }

    //뒤로가기 버튼 누르면 공유를 취소할건지 물어보는 action 다이얼로그 화면 띄우기
    override fun onBackPressed() {
        actionFrag.show(supportFragmentManager, null)
    }

    //네이버 지도 세팅
    @UiThread
    override fun onMapReady(naverMap: NaverMap) {
        map = naverMap

        initCourseSetModels()

        if (pathCoords.size == 1) {   //단일 경로일 때
            getSinglePathOverlay(pathCoords, map)   //지도에 경로 그리기
            binding.courseSetSectionTv.visibility =
                View.INVISIBLE  //몇번째 구간인지 보여주는(Ex.1/3구간) 텍스트뷰 INVISIBLE
        } else {    //여러 구간으로 나눠진 코스일 때
            getMultiPathOverlay(pathCoords, map)    //지도에 경로 그리기

            //몇번째 구간인지 보여주는(Ex.1/3구간) 텍스트뷰 VISIBLE
            binding.courseSetSectionTv.text = "${selectingPathIndex + 1}/${pathCoords.size}구간"
            binding.courseSetSectionTv.visibility = View.VISIBLE
        }

        //전체 경로가 보이도록 카메라 옮기기
        getPathBounds(pathCoords)?.let {
            naverMap.moveCamera(CameraUpdate.fitBounds(it))
        }
    }

    //CoureSetActivity 에서만 사용되는 데이터 모델 정의하기
    private fun initCourseSetModels() {
        if (pathCoords.size == 1) {   //단일 경로일 때
            val courseSetModel: CourseSetModel =
                CourseSetModel(selectedCoords = pathCoords[0], isSelected = true)
            courseSetModels.add(courseSetModel)
        } else {    //여러 구간으로 나눠진 코스일 때
            for ((index, path) in pathCoords.withIndex()) {
                var courseSetModel: CourseSetModel? = null

                courseSetModel = if (index == 0) {
                    CourseSetModel(selectedCoords = path, isSelected = true)
                } else {
                    CourseSetModel(selectedCoords = path)
                }

                courseSetModels.add(courseSetModel)
            }
        }
    }

    private fun initWalkAfterMap() {
        val options = NaverMapOptions().compassEnabled(false)

        val mapFragment =
            supportFragmentManager.findFragmentById(R.id.course_set_map_fragment) as MapFragment?
                ?: MapFragment.newInstance(options).also {
                    supportFragmentManager.beginTransaction().add(R.id.course_set_map_fragment, it)
                        .commit()
                }

        // 지도 비동기 호출
        mapFragment.getMapAsync(this)
    }

    private fun getSinglePathOverlay(path: MutableList<MutableList<LatLng>>, map: NaverMap) {
        //지도에 경로 그리기
        val multipartPath = MultipartPathOverlay()
        multipartPath.width = 30
        multipartPath.outlineWidth = 10
        multipartPath.coordParts = path
        multipartPath.colorParts = listOf(
            MultipartPathOverlay.ColorPart(
                getColor(R.color.primary),
                Color.WHITE,
                getColor(R.color.primary),
                getColor(R.color.primary)
            )
        )
        multipartPath.map = map
        multipartPaths.add(multipartPath)

        //시작점, 끝점 표시하기
        startMarker =
            getMarker(path[0][0], OverlayImage.fromResource(R.drawable.ic_donut_secondary))
        startMarker.map = map
        endMarker = getMarker(
            path[0][path[0].lastIndex],
            OverlayImage.fromResource(R.drawable.ic_donut_primary)
        )
        endMarker.map = map

        //시작과 끝점을 조절하는 RangeSeekBar 를 초기화
        changeRangeBar(0f, 100f)
        //초기화 버튼 INVISIBLE
        binding.courseSetResetBtn.visibility = View.INVISIBLE
    }

    private fun getMultiPathOverlay(paths: MutableList<MutableList<LatLng>>, map: NaverMap) {
        clickedCourseIndex = mutableListOf(0)

        for ((index, path) in paths.withIndex()) {
            val multipartPath = MultipartPathOverlay()
            multipartPath.width = 30
            multipartPath.outlineWidth = 10
            multipartPath.coordParts = listOf(path)

            //출발점, 도착점 아이콘 표시
            when (index) {
                0 -> {
                    multipartPath.colorParts = listOf(
                        MultipartPathOverlay.ColorPart(
                            getColor(R.color.primary),
                            Color.WHITE,
                            getColor(R.color.primary),
                            getColor(R.color.primary)
                        )
                    )
                    startMarker =
                        getMarker(path[0], OverlayImage.fromResource(R.drawable.ic_donut_secondary))
                    startMarker.map = map
                }
                paths.lastIndex -> {
                    multipartPath.colorParts = listOf(
                        MultipartPathOverlay.ColorPart(
                            getColor(R.color.white_dark),
                            Color.WHITE,
                            getColor(R.color.white_dark),
                            getColor(R.color.white_dark)
                        )
                    )
                    endMarker = getMarker(
                        path[path.lastIndex],
                        OverlayImage.fromResource(R.drawable.ic_donut_primary)
                    )
                    endMarker.map = map
                }
                else -> {
                    multipartPath.colorParts = listOf(
                        MultipartPathOverlay.ColorPart(
                            getColor(R.color.white_dark),
                            Color.WHITE,
                            getColor(R.color.white_dark),
                            getColor(R.color.white_dark)
                        )
                    )
                }
            }

            multipartPath.setOnClickListener {
                binding.courseSetResetBtn.visibility = View.VISIBLE //초기화 버튼 VISIBLE

                if (courseSetModels[index].isSelected) {    //원래 선택돼 있던 구간
                    if (selectingPathIndex == index) {    //선택돼 있던 구간이랑 지금 선택한 구간이랑 같을 때 -> 지금 선택한 구간 해제
                        //지금 선택한 구간을 해제한다.
                        multipartPath.coordParts = listOf(pathCoords[index])
                        multipartPath.colorParts = listOf(
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.white_dark),
                                Color.WHITE,
                                getColor(R.color.white_dark),
                                getColor(R.color.white_dark)
                            )
                        )

                        //지금 선택한 구간의 RangeSeekbar 를 초기화한다.
                        courseSetModels[index].selectedCoords = pathCoords[index]
                        courseSetModels[index].leftValue = 0f
                        courseSetModels[index].rightValue = 100f

                        clickedCourseIndex.remove(index)  //지금 선택한 인덱스를 스택에서 지운다.

                        if (clickedCourseIndex.isEmpty()) { //스택이 비어있으면 -> 디폴트 화면으로 변경
                            selectingPathIndex = 0  //첫번째 구간으로 변경
                            clickedCourseIndex.add(0)   //스택에 첫번재 구간 추가
                            changeRangeBar(
                                courseSetModels[selectingPathIndex].leftValue,
                                courseSetModels[selectingPathIndex].rightValue
                            )   //선택된 구간의 RangeBar UI로 변경 -> 이 부분이 변경되면 알아서 코스 구간도 바뀜.
                            binding.courseSetResetBtn.visibility =
                                View.INVISIBLE   //초기화 버튼 INVISIBLE
                        } else {    //스택이 비어있지 않으면 -> 가장 마지막으로 선택했던 구간의 UI 로 이동.
                            selectingPathIndex =
                                clickedCourseIndex.last()  //스택의 가장 마지막(=가장 최근에 선택했다는 뜻) 구간으로 변경
                            changeRangeBar(
                                courseSetModels[selectingPathIndex].leftValue,
                                courseSetModels[selectingPathIndex].rightValue
                            )   //선택된 구간의 RangeBar UI로 변경 -> 이 부분이 변경되면 알아서 코스 구간도 바뀜.
                        }
                    } else {    //선택돼 있던 구간이랑 지금 선택한 구간이랑 같지 않을 때 -> 지금 선택한 구간으로 이동
                        selectingPathIndex = index  //현재 선택된 구간의 인덱스로 변경
                        changeRangeBar(
                            courseSetModels[selectingPathIndex].leftValue,
                            courseSetModels[selectingPathIndex].rightValue
                        )   //선택된 구간의 RangeBar UI로 변경 -> 이 부분이 변경되면 알아서 코스 구간도 바뀜.
                        clickedCourseIndex.remove(index)  //지금 선택한 인덱스를 스택에서 지우고
                        clickedCourseIndex.add(index)  //지금 선택한 인덱스를 맨 마지막 위치로 보내기
                    }
                } else {    //원래 선택돼 있지 않던 구간
                    selectingPathIndex = index  //현재 선택된 구간의 인덱스로 변경
                    courseSetModels[index].isSelected =
                        !courseSetModels[index].isSelected  //isSelected = true
                    changeRangeBar(
                        courseSetModels[selectingPathIndex].leftValue,
                        courseSetModels[selectingPathIndex].rightValue
                    )   //선택된 구간의 RangeBar UI로 변경 -> 이 부분이 변경되면 알아서 코스 구간도 바뀜.
                    clickedCourseIndex.add(index)   //클릭된 코스 stack 쌓기
                }

                map.moveCamera(
                    CameraUpdate.fitBounds(
                        LatLngBounds.from(pathCoords[selectingPathIndex]),
                        200
                    )
                )   //현재 선택된 코스 구간으로 카메라 움직이기
                binding.courseSetSectionTv.text =
                    "${selectingPathIndex + 1}/${pathCoords.size}구간"   //몇구간인지 보여주기


                return@setOnClickListener true
            }

            multipartPath.map = map
            multipartPaths.add(multipartPath)
        }

        changeRangeBar(
            courseSetModels[0].leftValue,
            courseSetModels[0].rightValue
        ) //첫번째 구간의 시작과 끝점을 조절하는 RangeSeekBar 를 초기화
        binding.courseSetResetBtn.visibility = View.INVISIBLE   //초기화 버튼 INVISIBLE
    }

    private fun setMyEventListener() {
        binding.courseSetRsb.setOnRangeChangedListener(object : OnRangeChangedListener {
            override fun onRangeChanged(
                view: com.jaygoo.widget.RangeSeekBar?,
                leftValue: Float,
                rightValue: Float,
                isFromUser: Boolean
            ) {
                var minMapIdx = (pathCoords[selectingPathIndex].size * leftValue / 100 - 1).toInt()
                var maxMapIdx = (pathCoords[selectingPathIndex].size * rightValue / 100 - 1).toInt()
                if (minMapIdx < 0)
                    minMapIdx = 0
                else if (minMapIdx == pathCoords[selectingPathIndex].size)
                    minMapIdx--
                if (maxMapIdx == pathCoords[selectingPathIndex].size)
                    maxMapIdx--
                else if (maxMapIdx < 0)
                    maxMapIdx = 0

                //아래 RangeSeekbar 조절하기
                binding.courseSetRsbSub.setMinThumbValue(leftValue.toInt())
                binding.courseSetRsbSub.setMaxThumbValue(rightValue.toInt())

                courseSetModels[selectingPathIndex].leftValue = leftValue
                courseSetModels[selectingPathIndex].rightValue = rightValue
                courseSetModels[selectingPathIndex].selectedCoords =
                    pathCoords[selectingPathIndex].subList(minMapIdx, maxMapIdx)

                if (minMapIdx == 0 && maxMapIdx == pathCoords[selectingPathIndex].lastIndex) {  //시작==0, 끝==100 일 때 -> 전체 선택으로 표시
                    binding.courseSetNextTv.isEnabled = true    //다음 버튼 활성화
                    multipartPaths[selectingPathIndex].coordParts =
                        listOf(pathCoords[selectingPathIndex])
                    multipartPaths[selectingPathIndex].colorParts = listOf(
                        MultipartPathOverlay.ColorPart(
                            getColor(R.color.primary),
                            Color.WHITE,
                            getColor(R.color.primary),
                            getColor(R.color.primary)
                        )
                    )
                } else if (minMapIdx == maxMapIdx) {  //시작이랑 끝점이 같을 때 -> 이때는 다음 버튼을 비활성화 시켜서 다음 화면으로 안 넘어가도록 하기
                    binding.courseSetNextTv.isEnabled = false   //다음 버튼 비활성화
                } else {
                    binding.courseSetNextTv.isEnabled = true    //다음 버튼 활성화
                    if (minMapIdx == 0) { //끝점만 움직였을 때
                        multipartPaths[selectingPathIndex].coordParts = listOf(
                            pathCoords[selectingPathIndex].slice(0..maxMapIdx),
                            pathCoords[selectingPathIndex].slice(maxMapIdx until pathCoords[selectingPathIndex].size),
                        )
                        multipartPaths[selectingPathIndex].colorParts = listOf(
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.primary),
                                Color.WHITE,
                                getColor(R.color.primary),
                                getColor(R.color.primary)
                            ),
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.white_dark),
                                Color.WHITE,
                                getColor(R.color.white_dark),
                                getColor(R.color.white_dark)
                            )
                        )
                    } else if (maxMapIdx == pathCoords[selectingPathIndex].lastIndex) {   //시작점만 움직였을 때
                        multipartPaths[selectingPathIndex].coordParts = listOf(
                            pathCoords[selectingPathIndex].slice(0..minMapIdx),
                            pathCoords[selectingPathIndex].slice(minMapIdx until pathCoords[selectingPathIndex].size)
                        )
                        multipartPaths[selectingPathIndex].colorParts = listOf(
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.white_dark),
                                Color.WHITE,
                                getColor(R.color.white_dark),
                                getColor(R.color.white_dark)
                            ),
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.primary),
                                Color.WHITE,
                                getColor(R.color.primary),
                                getColor(R.color.primary)
                            ),
                        )
                    } else {    //시작점, 끝점 모두 움직였을 때
                        multipartPaths[selectingPathIndex].coordParts = listOf(
                            pathCoords[selectingPathIndex].slice(0..minMapIdx),
                            pathCoords[selectingPathIndex].slice(minMapIdx..maxMapIdx),
                            pathCoords[selectingPathIndex].slice(maxMapIdx until pathCoords[selectingPathIndex].size)
                        )
                        multipartPaths[selectingPathIndex].colorParts = listOf(
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.white_dark),
                                Color.WHITE,
                                getColor(R.color.white_dark),
                                getColor(R.color.white_dark)
                            ),
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.primary),
                                Color.WHITE,
                                getColor(R.color.primary),
                                getColor(R.color.primary)
                            ),
                            MultipartPathOverlay.ColorPart(
                                getColor(R.color.white_dark),
                                Color.WHITE,
                                getColor(R.color.white_dark),
                                getColor(R.color.white_dark)
                            )
                        )
                    }
                }

                binding.courseSetResetBtn.visibility = View.VISIBLE //초기화 버튼 VISIBLE
            }

            override fun onStartTrackingTouch(
                view: com.jaygoo.widget.RangeSeekBar?,
                isLeft: Boolean
            ) {
            }

            override fun onStopTrackingTouch(
                view: com.jaygoo.widget.RangeSeekBar?,
                isLeft: Boolean
            ) {
            }
        })

        //초기화 버튼 클릭 리스너
        binding.courseSetResetBtn.setOnClickListener {
            selectingPathIndex = 0

            if (pathCoords.size > 1) {  //여러 구간으로 나뉜 코스일 때
                clickedCourseIndex.clear()  //클릭한 구간의 스택을 저장하는 리스트 clear
                binding.courseSetSectionTv.text =
                    "${selectingPathIndex + 1}/${pathCoords.size}구간"   //몇구간인지 보여주기
            }

            multipartPaths.clear()  //경로 리스트 clear
            courseSetModels.clear() //CourseSetActivity 에서 사용되는 데이터 모델 리스트 clear

            initCourseSetModels()   //CourseSetActivity 에서 사용되는 데이터 모델 리스트 세팅

            if (pathCoords.size == 1)
                getSinglePathOverlay(pathCoords, map)
            else
                getMultiPathOverlay(pathCoords, map)

            //전체 경로가 보이도록 카메라 옮기기
            getPathBounds(pathCoords)?.let {
                map.moveCamera(CameraUpdate.fitBounds(it))
            }
        }

        //취소 텍스트뷰 클릭 리스너
        binding.courseSetCancelTv.setOnClickListener {
            actionFrag.show(supportFragmentManager, null)
        }

        //다음 텍스트뷰 클릭 리스너
        binding.courseSetNextTv.setOnClickListener {
            val intent: Intent = Intent(this@CourseSetActivity, CourseShareActivity::class.java)
            val selectedPathCoords: MutableList<MutableList<LatLng>> = mutableListOf()
            for (model in courseSetModels) {
                if (model.isSelected)
                    selectedPathCoords.add(model.selectedCoords)
            }
            intent.putExtra(
                "coords",
                selectedPathCoords as ArrayList<ArrayList<LatLng>>
            )    //공유할 코스 좌표 리스트
            intent.putExtra(
                "time",
                (60 * (getTotalCnt(selectedPathCoords).toDouble() / getTotalCnt(pathCoords).toDouble())).toInt()
            )   //소요시간
            startActivity(intent)
        }
    }

    private fun initActionFrag() {
        val bundle: Bundle = Bundle()
        bundle.putString("msg", getString(R.string.msg_cancel_course_share))
        bundle.putString("desc", getString(R.string.msg_no_restore_shared_content))
        bundle.putString("left", getString(R.string.action_cancel))
        bundle.putString("right", getString(R.string.action_delete))

        actionFrag = ActionDialogFragment()
        actionFrag.arguments = bundle
        actionFrag.setMyDialogCallback(object : ActionDialogFragment.MyDialogCallback {
            override fun leftAction(action: String) {
            }

            override fun rightAction(action: String) {
                finish()
            }
        })
    }

    private fun changeRangeBar(leftValue: Float, rightValue: Float) {
        binding.courseSetRsbSub.setMinThumbValue(leftValue.toInt())
        binding.courseSetRsbSub.setMaxThumbValue(rightValue.toInt())
        binding.courseSetRsb.setProgress(leftValue, rightValue)
    }

    private fun getTotalCnt(list: MutableList<MutableList<LatLng>>): Int {
        var cnt: Int = 0
        for (section in list) {
            cnt += section.size
        }

        return cnt
    }
}